# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on: [push]
  # push:
  #   branches: [ "master" ]
  # pull_request:
  #   branches: [ "master" ]

defaults:
  run:
    working-directory: ./client/

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v3
    - name: npm install and build webpack w/${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./client/package-lock.json
    - run: npm install
    - run: npm run build --if-present
    - uses: actions/upload-artifact@v3
      with:
        name: client build dev
        path: client/build

  test:

    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix:
        node-version: [16.x]
        os: [ubuntu-latest] #, windows-2016

    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: client build dev
        path: ./build
    - name: npm test  w/${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./client/package-lock.json
    - name: Run test
      run: |
        echo ${{ github.workspace }}
        
        echo $GITHUB_WORKSPACE
        
        echo "*** Get list of prev directory ***"
        ls -l ../

        echo "*** Get list of current directory ***"
        ls -l
        
        #echo "*** Get list of current directory ***"
        #ls -l public
        #ls -l public2
        #npm ci
        #npm run build --if-present
        #npm test
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
